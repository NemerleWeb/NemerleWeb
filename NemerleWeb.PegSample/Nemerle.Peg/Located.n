using System;
using System.Text.RegularExpressions;
using SCG = System.Collections.Generic;

using Nemerle.Assertions;
using Nemerle.Utility;

namespace Nemerle.Peg
{
  public class Located : IToken
  {
    [Accessor(flags = WantSetter)]
    mutable location : Location;

    public StartPos : int { get { location.StartPos } }
    public EndPos : int { get { location.EndPos } }

    public this() {}

    public this(location : Location)
    {
      this.location = location;
    }
    
    static _posAndLenRx : Regex = Regex(@"\[(\d+):(\d+)]", RegexOptions.Compiled);
    
    public static ExtractPosAndLen(msg : string) : int * int
    {
      def m = _posAndLenRx.Match(msg);
      
      if (m.Success)
      {
        def errorPos = int.Parse(m.Groups[1].Value);
        def errorLen = int.Parse(m.Groups[2].Value);
        (errorPos, errorLen)
      }
      else (-1, -1)
    }
    
    protected BuildMessage(msg : string) : string
    {
      def pos = Location.StartPos;
      def len = Location.EndPos - Location.StartPos;
      $"$(Location.Source.FileName)$(Location.StartLineColumn.ToString()):[$pos:$len]: $msg"
    }
  }
}