using System.Collections.Generic;
using System.Linq;
using System.Text;
using Nemerle;
using NemerleWeb;
using System.Collections.Concurrent;

namespace NemerleWeb.PegSample
{
  [Unit, Record]  
  class Sample
  {
    public Name : string { get; set; }
    public SourceFiles : list[string] { get; set; }
    public Source : string { get; set; }
    public Instance : object { get; set; }
  }
  
  [Unit]
  class PegSamplePage
  {
    SelectedSample : Sample { get; set; }
    
    Samples : List[Sample] { get; set; }    
    
    Sources : List[string * string] { get; set; }
    ThisPageSource : string { get; set; }
    
    Calculator : CalculatorPage { get; set; }

    public this()
    {
      Calculator = CalculatorPage();
      
      Samples =
      [
        Sample("Calculator", ["MVVM/CalculatorPage.n"], "", Calculator),
      ].ToList();
      
      SelectedSample = Samples[0];
    
      LoadSamples(Samples);
    
      server.LoadSourceFor("MVVM/PegSamplePage.n", source =>
      {
        ThisPageSource = source;
        js prettyPrint();
      });
    }
      
    LoadSamples(samples : List[Sample]) : void
    {
      for(mutable i = 0; i < samples.Count; i++)      
        LoadSample(samples, i)      
    }
    
    LoadSample(samples : List[Sample], index : int) : void
    {
      server.LoadSourceForList(samples[index].SourceFiles, source =>
      {          
        samples[index].Source = source;
        js prettyPrint();
      });  
    }
    
    SelectSample(sample : Sample) : void 
    {
      SelectedSample = sample;
      js prettyPrint();
    }
    
    public class Server
    {
      public static _lastMessages : ConcurrentQueue[Sample] = ConcurrentQueue.[Sample]();
      
      public LoadSourceFor(sample : string) : string
      {
        Helpers.LoadSourceFor(sample);
      }
      
      public LoadSourceForList(samples : IEnumerable[string]) : string
      {
        $<#..$(samples; "\n"; Helpers.LoadSourceFor)#>
      }
    }
    
    [Html]
    public View() : string
    {
      <# 
        <div class="container">
          <ul class="samples-menu">
            <li class="header">Peg Samples</li>
            <li $foreach(s in Samples) css-selected="$(SelectedSample.Name == s.Name)"><span click="$SelectSample">$(s.Name)</span></li>
          </ul>
          <div $foreach(s in Samples)>
            <div $when(SelectedSample.Name == s.Name) class="current-sample">
              <div template="$(template(s.Instance))"></div>
              <h2>Source</h2>
              <pre class="prettyprint lang-n prettyprinted">$(s.Source)</pre>
            </div>
          </div>
          <h2>Main page source</h2>
          <pre class="prettyprint lang-n prettyprinted">$ThisPageSource</pre>
        </div>
      #>
    }
  }
}
