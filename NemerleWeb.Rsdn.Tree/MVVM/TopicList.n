using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Extensions;

using System;
using System.Collections.Generic;
using System.Linq;
using NemerleWeb;
using NemerleWeb.TypedJS;

using Rsdn.Tree.Models;

namespace Rsdn
{    
  [Unit]
  public class TopicList
  {
    [Dto] public class Topic 
    { 
      Name : string; 
      Author : string; 
      Rating : int; 
      Comments : int; 
      Id : int;
      LastAnswerBy : string;
      LastUpdatedOn : string;
      CreatedOn : string;
      Agrees : int;
      Disagrees : int;
      Smiles : int;
      public LolIconCount : int { get { Smiles / 3; } }
      public SmileIconCount : int { get { Smiles % 3; } }
    }

    private mutable _url : string;
    private mutable _topics : List[Topic];
    private mutable _selectedTopic : CommentNode;
    private mutable _maxDepth : int;
    private mutable _isLoading : bool;

    public mutable Name : string;
    public Url : string 
    { 
      get { _url; } 
      set { 
        _url = value;
        _selectedTopic = null;
        _ = server.GetTopicList(value, topics => _topics = topics.ToList());
      }
    }
    
    OpenTopic(topic : Topic) : void
    {
      _isLoading = true;
      _ = server.LoadReplies(topic.Id, (node) => {
        _selectedTopic = node;
        _isLoading = false;
      });
    }

    ReturnToList() : void
    {
      _selectedTopic = null;
    }
    
    [Html]
    public View() : string
    {
      <#
        <h2 class="topic-list-name" click="$ReturnToList">$Name</h2>
        <div $foreach(topic in _topics) class="topic" click="$(OpenTopic(topic))" visible="$(_selectedTopic == null)">
          <div class="topic-rating-box">
            <div>$(topic.Rating)</div>
            <span class="agrees">$(topic.Agrees)</span>
            <span class="disagrees">$(topic.Disagrees)</span>
          </div>
          <div class="topic-description">
            <span class="topic-name">$(topic.Name)</span>          
            <span class="topic-comment-count">
              Ответов: 
              <strong>$(topic.Comments)</strong>, последний $(topic.LastUpdatedOn) от
              <strong>$(topic.LastAnswerBy)</strong>
            </span>
            <span class="topic-author">Автор: $(topic.Author)</span>
            <span class="topic-rating">Рейтинг: $(topic.Rating)</span>
            <span class="topic-createdon">Создан: $(topic.CreatedOn)</span>
            <span $when(topic.Smiles > 0) class="topic-smiles" >
              <img $foreach(_ in Enumerable.Range(0, topic.LolIconCount)) class="rate-ref-img" src="http://www.rsdn.ru/Forum/Images/lol.gif" alt=":)))" />
              <img $foreach(_ in Enumerable.Range(0, topic.SmileIconCount)) class="rate-ref-img" src="http://www.rsdn.ru/Forum/Images/smile.gif" alt=":)))" />
            </span>
          </div>
        </div>
        <div $when(_selectedTopic != null)>
          <div template="$_selectedTopic" />
        </div>
        <div class="loading" visible="$_isLoading">Loading...</div>
      #>
    }
    
    public class Server
    {
      public GetTopicList(url : string) : IEnumerable[Topic]
      {
        TopicLoader.GetTopicList(url);
      }

      public LoadReplies(id : int) : CommentNode
      {
        TopicLoader.LoadReplies(id)
      }
    }
  }
}
