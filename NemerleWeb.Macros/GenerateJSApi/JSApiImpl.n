using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using NemerleWeb;

namespace NemerleWeb
{
  /// <summary>
  /// Automatically implement JSApi classes.
  /// </summary>
  [MacroUsage(MacroPhase.BeforeTypedMembers, MacroTargets.Class)]
  macro JSApiImpl(typeBuilder : TypeBuilder)
  {
    JSApiImplImpl.DoTransform(Macros.ImplicitCTX(), typeBuilder)
  }
  
  module JSApiImplImpl
  {
    public DoTransform(typer : Typer, typeBuilder : TypeBuilder) : void
    {
      Macros.DefineCTX(typer);
      
      // Iterate all functions, add default implementation only to not implemented functions.
      foreach(ast is TopDeclaration.Class in typeBuilder.AstParts)
        foreach(function is ClassMember.Function in ast.decls)
           when(function.Body is <[]> || function.Body is <[ () ]>)
            function.Body = <[ throw NemerleWeb.ClientCodeCalledInServerException(); ]>;
      
      // Add JSApi attribute if it hasn't been added
      when(!typeBuilder.IsCustomAttributeDefined("NemerleWeb.JSApiAttribute"))
        typeBuilder.Ast.AddCustomAttribute(<[ NemerleWeb.JSApiAttribute ]>);
       
      // Add empty protected constructor if doesn't exist
    }
  }
}
