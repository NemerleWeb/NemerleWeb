using System.Collections;
using System.Collections.Generic;
using System.Xml.Linq;
using System.Linq;

namespace NemerleWeb
{
  public module Ext 
  {
      public CombineAttributes[T](this instance : IEnumerable[T]) : IEnumerable[object]
      {
        def xattrs = instance.OfType.[XAttribute]();
        def cssValue = string.Join(", ", xattrs.Where(a => a.Name.LocalName.StartsWith("css-")).Select(a => $"\"$(a.Name.LocalName.Substring(4))\": $(a.Value)"));
        def css = "css: {" + cssValue + "}";
        def styleValue = string.Join(", ", xattrs.Where(a => a.Name.LocalName.StartsWith("style-")).Select(a => $"\"$(a.Name.LocalName.Substring(6))\": $(a.Value)"));
        def style = "style: {" + styleValue + "}";
        def attrs = xattrs.Where(a => !a.Name.LocalName.StartsWith("css-"))
                          .Where(a => !a.Name.LocalName.StartsWith("style-"))
                          .Concat(if(!string.IsNullOrWhiteSpace(cssValue)) [XAttribute("data-bind", css)] else [])
                          .Concat(if(!string.IsNullOrWhiteSpace(styleValue)) [XAttribute("data-bind", style)] else [])
                          .GroupBy(a => a.Name.LocalName)
                          .Select(a => XAttribute(a.Key, string.Join(", ", a.Select(x => x.Value))));
        instance.Where(x : object => !(x is XAttribute)).Concat(attrs);
      }
  }
}
