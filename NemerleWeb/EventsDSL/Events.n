using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace NemerleWeb
{  
  public module Events
  {
    public Handle(eventName : string, callback : NemerleWeb.MouseEventArgs -> void) : void 
    {}
    
    public HandleUntil(eventName : string, untilName : string, callback : NemerleWeb.MouseEventArgs -> void) : void 
    {}
    
    public HandleOnce(eventName : string, callback : NemerleWeb.MouseEventArgs -> void) : void 
    {}
    
    public Invalidate() : void 
    {};
  }
  
  public class MouseEventArgs
  {
    public altKey : bool;
    public attrChange : object;
    public attrName : string;
    public bubbles : bool;
    public button : int;
    public buttons : object;
    public cancelable : bool;
    public clientX : int;
    public clientY : int;
    public ctrlKey: bool;
    public currentTarget : object;
    public data : object;
    public delegateTarget : object;
    public eventPhase : int;
    public fromElement : object;
    public handleObj : object;
    public isDefaultPrevented : bool;    
    public metaKey : bool;
    public offsetX : int;
    public offsetY : int;
    public originalEvent : MouseEventArgs;
    public pageX : int;
    public pageY : int;
    public relatedNode : object;
    public relatedTarget : object;
    public screenX : int;
    public screenY : int;
    public shiftKey : bool;
    public srcElement : object;
    public target : object;
    public timeStamp : int;
    public toElement : object;
    public type : string;
    public view : object;
    public which: int;
  }
}
