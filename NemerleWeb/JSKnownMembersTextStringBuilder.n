using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace NemerleWeb
{
  module JSKnownMembersTextStringBuilder
  {    
    public Register() : void
    {
      JSKnownMembers.RegisterType(typeof(StringBuilder), Handler);
    }
  
    public Handler(left : JSAst, member : IMember, parms : list[JSAst]) : option[JSAst]
    {
      (if (left is JSAst.StaticMethodRef) StaticHandler else InstanceHandler)(left, member, parms)
    }
    
    static NewLine : JSAst.Literal = JSAst.Literal(JSLiteral.String("\n"));
    
    private InstanceHandler(left : JSAst, member : IMember, parms : list[JSAst]) : option[JSAst]
    {
      match(parms)
      {
      | [arg1]
        when member.Name == "Append" &&
             (member :> IMethod).GetParameters().Nth(0).Type.Equals(JSClass.ObjectType) =>
        Some(left.ExternalMethodCall(member.Name, [arg1]))
      | _ => Some(left.ExternalMethodCall(member.Name, parms))
      }
    }
     
    private StaticHandler(_left : JSAst, _member : IMember, _parms : list[JSAst]) : option[JSAst]
    {
      None()
    }
  }
}
