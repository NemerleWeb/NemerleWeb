using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace Nemerle.Peg
{
  partial internal class GrammarCompiler
  {
    private DefineGetRuleName() : void
    {
      def makeMatchCase(name)
      {
        MatchCase([<[ $(TypedGrammar.GetRule(name).Id : int) ]>], <[ $(name.Id : string) ]>)
      }
      def idToName = TypedGrammar.Names.Map(makeMatchCase);
      def idToName = idToName + [MatchCase([<[ _ ]>], <[ "Unknown rule id." ]>)];
       PegGrammarOptions.GetDefineMethod(_tb)(
        <[decl:
          public GetRuleName(id : int) : string
          {
            match (id)
            {
              ..$idToName
            }
          }
        ]>);
    }
  }
}
