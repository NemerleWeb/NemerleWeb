using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace NemerleWeb.Peg
{
  public class PegParser
  {
    private _grammars : Hashtable[Type, IGrammar] = Hashtable();
    private _grammarList : List[IGrammar] = List();
    private _stateStack : Nemerle.Collections.Stack[int] = Stack();

    public AddGrammar[T](ctor : PegParser -> T) : T
      where T : IGrammar, class
    {
      def grammarType = typeof(T);
      mutable grammarVar;
      if (_grammars.TryGetValue(grammarType, out grammarVar))
        grammarVar :> T
      else
      {
        def newGrammar = ctor(this);
        assert(newGrammar.GetType().Equals(grammarType));
        _grammars[grammarType] = newGrammar;
        _grammarList.Add(newGrammar);
        newGrammar
      }
    }

    public PushState() : void
    {
      _stateStack.Push(_grammarList.Count);
      _grammarList.Iter(_.PushGrammarState());
    }

    public PopState() : void
    {
      _stateStack.Push(_grammarList.Count);
    }
  }
}
