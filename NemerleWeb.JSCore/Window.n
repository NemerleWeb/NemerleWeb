using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using NemerleWeb;

using System;
using System.Collections.Generic;
using System.Linq;

namespace NemerleWeb.JsCore
{
  [JsApi]
  public class Window
  {
    public mutable closed : bool;
    public mutable defaultStatus : string;
    public mutable document : Document;
    public mutable frames	: array[Window];
    public mutable history : History;
    public mutable innerHeight : int;
    public mutable innerWidth : int;
    public mutable length : int;
    public mutable location	: Location;
    public mutable name : string;
    public mutable navigator : Navigator;
    public mutable opener	: Window;
    public mutable outerHeight : int;
    public mutable outerWidth : int;
    public mutable pageXOffset : int;
    public mutable pageYOffset : int;
    public mutable parent : Window;
    public mutable screen : Screen;
    public mutable screenLeft	: int;
    public mutable screenTop : int;
    public mutable screenX : int;
    public mutable screenY : int;
    public mutable self	: Window;
    public mutable status : string;
    public mutable top : Window;
    
    public alert(message : string) : void {}
    public blur() : void {}
    public clearInterval(id : int) : void {}
    public clearTimeout(id : int) : void {}
    public close() : void {}
    public confirm(message : string) : bool { false; }
    public focus() : void {}
    public moveBy(x : int, y : int) : void {}
    public moveTo(x : int, y : int) : void {}
    public open(url = null : string, name = null : string, specs = null : string, replace = false : bool) : Window {null};
    public print() : void {}
    public prompt(message : string)	: string {null}
    public resizeBy(width : int, height : int) : void {}
    public resizeTo(width : int, height : int) : void {}
    public scroll()	: void {}
    public scrollBy(x : int, y : int) : void {}
    public scrollTo(x : int, y : int) : void {}
    public setInterval(callback : void -> void, interval : int)	: int {0} 
    public setTimeout(callback : void -> void, timeout : int)	: int {0} 
  }
}
